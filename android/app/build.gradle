plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.exagon_soft.lashess_by_prii"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "27.0.12077973"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        applicationId = "com.exagon_soft.lashess_by_prii"
        minSdkVersion = flutter.minSdkVersion
        targetSdkVersion = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        multiDexEnabled = true

        // Optimize vector drawables
        vectorDrawables {
            useSupportLibrary = true
        }
    }

    signingConfigs {
        release {
            storeFile file("release-key.jks")
            storePassword System.getenv("CM_KEYSTORE_PASSWORD") ?: "default_password"
            keyAlias System.getenv("CM_KEY_ALIAS") ?: "default_alias"
            keyPassword System.getenv("CM_KEY_PASSWORD") ?: "default_key_password"
        }
        debug {
            keyAlias "release"
            keyPassword "SabriSamymartin11*"
            storeFile file('release-key.jks')
            storePassword "SabriSamymartin11*"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            // ðŸ”¥ Optimize size
            minifyEnabled true
            shrinkResources true
            crunchPngs true

            // Use ProGuard rules
            proguardFiles getDefaultProguardFile(
                "proguard-android-optimize.txt"
            ), "proguard-rules.pro"
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    // ðŸ”¥ Split by ABI for smaller downloads
    bundle {
        abi {
            enableSplit = true
        }
    }

    // ðŸ”¥ Packaging optimization
    packagingOptions {
        jniLibs {
            useLegacyPackaging = false
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            dimension "default"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
        staging {
            dimension "default"
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
        }
        production {
            dimension "default"
            // no suffix for release
        }
    }
}

dependencies {
    implementation platform("org.jetbrains.kotlin:kotlin-bom:2.2.10")
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
}

flutter {
    source = "../.."
}
